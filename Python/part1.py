# С символа # начинается комментарий.
# Питон игнорирует все комментарии

# В питоне существуют три типа конструкций:
# Переменные, выражения и ключевые слова

# Переменная - это как коробка, где лежат ОБЪЕКТЫ.

# У ОБЪЕКТОВ есть тип. Как бы этекетка на коробке.

# Существуют следущие встроенные типы ОБЪЕКТОВ:
# int => (integer) целое число
a = 123
# float => (floating point number) дробное число
a = 3.14
# bool => (boolean) бул, логическое значение
a = True
a = False
# str => (string) строчка
a = "Hello"
# list => список
a = [1, 20, 300]
# tuple => кортеж, неизменяемый список
a = (1, 20, 30)
# set => множество, мешочек со значениями
a = {1, 2, 3}
# dict => (dictionary) словарь. Массив, у
# которого вместо индексов может быть
# всё, что не изменяется.
a = {"Петя": 1, "Вова": 2, "Таня": 3}

# Изменяемые типы: списки, словари, множества
# Неизменяемые типы: числа, булы, строки, кортежи

# Выражения. Это конструкции, которые обозначают ОБЪЕКТ.
# В примерах для типов выше используется выражение
# присвоения и выражение обозначающее соответсвующий тип.
# Например, это выражение ниже обозначает кортеж:
(5, 10, 15, 20)
# Выражение ниже присваивает этот кортеж в переменную:
a = (5, 10, 15, 20)
# То есть выражение справа создаёт кортеж, присваивает
# его в переменную `a` и после этого `a` тоже является
# кортежем

# Ключевые слова - особые инструкции для интерпретатора
# питона. Это for, while, if, def, return и многие другие.


# Существует ещё один "особый" тип ОБЪЕКТОВ - это функции.
# Функции - это вызываемый участок кода, подпрограмма.
# Пока ограничимся тем, что есть встроенные функции.
# Для каждого типа есть функция, которая пытается
# преобразовать ОБЪЕКТ к другому типу. Например:
# Присваиваем строку 123 в переменную `a`
a = "123"
# Преобразуем объект в переменной `a` к целому числу
# и кладём его обратно в переменную `a`
a = int(a)
# Преобразуем обратно в строку:
a = str(a)

# Функция input() получает из консоли одну строку:
# В круглых скобках можно указать строку и input()
# выведет её в качестве подсказки для ввода:
a = input("Введите что-то:\n")
# \n => это символ конца строки. Когда его видит консоль,
# то она начинает новую строку в выводе

# Функция print() выводит в консоль. Она хитро устроена.
# Ей можно передавать много объектов. А ещё у неё есть
# именованные аргументы end и sep
# end - это строка, которую print выведет в конце
# sep - это строка, которой print будет разделять ОБЪЕКТЫ
print(a, 123, 3.14, (1, 2, 3), sep='__', end='@$\n')

# Арифметика в питоне работает также, как и в математике,
# но одна дробная черта всегда возвращает дробное значение,
# а две дробные черты возвращают всегда целое число.
# Да, арифметические операции - это тоже функции.
print(5 / 3, 5 // 3)

# Существует функция range(), которая создаёт ОБЪЕКТ
# промежутка чисел
print(range(10))
# Однако это список чисел, а именно промежуток.
# Поэтому интерпретатор его просто так не выведет.
# Чтобы его вывести, нужно сначала преобразовать
# промежуток к списку:
print(list(range(10)))
# Вот возможные способы написания range:
print(list(range(5)))
print(list(range(2, 5)))
print(list(range(0, 10, 2)))
print(list(range(10, -5, -2)))
